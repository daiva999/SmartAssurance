<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function ($scope, spModal) {
	var c = this;

	$scope.redirection = function(){
			c.server.get({"action":"getID","value":$scope.options.redirect_url}).then(function(response){
			//	alert(JSON.stringify(response.data.URL))
			location.href = "/ap?id="+response.data.URL;
		})
		
	}
	
	$scope.addBenefits=function(){
		location.href = "/ap?id="+"addbenefits";
	}

	$scope.addFeatures=function(){
		location.href = "/ap?id="+"product_feature";
	}

	function toggleCheckbox() {
		var checkbox = document.getElementById("myCheckbox");
		var slider = document.querySelector(".slider");

		if (checkbox.checked) {
			// Your logic when the checkbox is checked
			slider.style.backgroundColor = "#2196F3";
		} else {
			// Your logic when the checkbox is unchecked
			slider.style.backgroundColor = "#ccc";
		}
	}

	$scope.temp = $scope.searchQuery;	

	$scope.$watch('searchQuery', function (newVal, oldVal) {
		if (newVal !== oldVal) {
			$scope.search();
		}
	});

	$scope.search = function () {
		$scope.temp = $scope.searchQuery;  // Set $scope.temp to the current value of $scope.searchQuery
		$scope.data.arr = $scope.data.arr.filter(function (row) {
			return (
				row.category_code.toLowerCase().includes($scope.temp.toLowerCase()) ||
				row.category_name().includes($scope.temp.toLowerCase())
			);
		});
	};


	$scope.checkAll = function() {
		var num=1;
		// Logic to handle the checkbox change, e.g., select/deselect all items
		angular.forEach(c.data.arr, function(task) {
			if(num<=$scope.maxInc)
				task.checked = $scope.checkall;
			else{
				return;
			}
			num++;
		});
	};


	$scope.deletSelected = function(){

		var deleteIDs = [];
		for(var i=0;i<c.data.arr.length;i++){
			if(c.data.arr[i].checked){
				deleteIDs.push(c.data.arr[i].sys_id.toString());
			}
		}

		if(deleteIDs.length > 0){
			var opt = {
				title: "Confirmation",
				message: "Are you sure you want to delete the selected record(s)",
				buttons: [
					{
						
						label: "Cancel",
						value: "cancel",
						
						id: "cancel",
						primary: true,
					},
					{
						label: "Confirm",
						value: "delete",
						
						id:"confirm",
						class: "close-popup",
					},
				],
			};

			spModal.open(opt).then(function (ans) {
				if (ans.value == "delete") {
					//	c.data.currentTask = id;
					c.data.deleteIDs = deleteIDs;
					c.data.action = "Delete";
					$scope.checkall=false;
					c.server.get().then(function(response){
						if(response){
							c.server.update();
						}
					});
				}
			});
		}

	}


	/*
	$scope.deletSelected = function(){
		var deleteIDs = [];
		for(var i=0;i<c.data.arr.length;i++){

			if(c.data.arr[i].checked){
				deleteIDs.push(c.data.arr[i].sys_id.toString());
			}
		}
		if(deleteIDs.length <= 0){
			alert("Please select at least one record to delete");
		}else{
			var userResp = confirm("Delete the selected record(s)?");
			if(userResp){
				c.data.deleteIDs = deleteIDs;
				c.data.action = "Delete";
				$scope.checkall=false;
				c.server.get().then(function(response){
					if(response){
						c.server.update();
					}
				});
			}
		}
	}*/

	//Sorting
	$scope.reverse = false;
	$scope.sortKey = $scope.data.fieldListArray[0];

	$scope.sort = function (field) {
		// alert(field);
		$scope.sortKey = field;
		$scope.reverse = !$scope.reverse;
	};


	// Pagination
	$scope.maxInc = 10;






	// Delete a record
	$scope.fun = function (id, action) {
		if (action == "Delete") {
			var opt = {
				title: "Confirmation",
				message: "<b>Please confirm</b> that you want to delete this category.",
				buttons: [
					{
						label: "Cancel",
						value: "cancel",
						primary: true,
					},
					{
						label: "Confirm",
						value: "delete",
						class: "close-popup",
					},
				],
			};
			spModal.open(opt).then(function (ans) {
				if (ans.value == "delete") {
					c.data.currentTask = id;
					c.server.update().then(function () {
						c.data.currentTask = "";
					});
				}
			});
		}
	};

	// Toggle 
	$scope.toggle = function(id){
		c.data.currentRec = id;
		c.server.update().then(function () {
			c.data.currentRec = "";
		});
	}



};

/*
	  $scope.checkAll = function () {
        var startIndex = $scope.currentIndex;
        var endIndex = Math.min($scope.currentIndex + parseInt($scope.maxInc), c.data.arr.length);

        for (var i = startIndex; i < endIndex; i++) {
            c.data.arr[i].checked = $scope.checkall;
        }
    };


    // Function to delete selected records
    $scope.deletSelected = function () {
    console.log("c.data.arr:", c.data.arr);

    var deleteIDs = c.data.arr.filter(function (item) {
        return item.checked;
    }).map(function (item) {
        return item['sys_id'];
    });

    console.log("deleteIDs:", deleteIDs);

    if (deleteIDs.length <= 0) {
        alert("Please select at least one record to delete");
    } else {
        var userResp = confirm("Delete the selected record(s)?");
        if (userResp) {
            // Use GlideAjax for server communication
            c.server.get({ action: "delete", deleteIDs: deleteIDs }).then(function () {
                // Optionally, refresh the data after deletion
                c.server.update();
            });
        }
    }
};


	*/]]></client_script>
        <controller_as>c</controller_as>
        <css>.goBack {
  position: relative;
  width: 100px;
  height: 40px; 
}

.goBack i {
  display: inline-block;
  transition: opacity 0.3s ease-out;
}
.headDivButtons{
	width : 350px;
  display:flex;
  justify-content:space-between;
  
}

.goBack::before {
  content: 'Go back';
  display: none;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.goBack:hover i {
  opacity: 0;
}

.goBack:hover::before {
  display: inline-block;
}

.sIn{
	padding: 0 15px 0 15px;
}


.headDiv{
  display:flex;
  justify-content: space-between;
}

.img {
  max-width: 70px;
  max-height: 70px;
}

#dataTable {
  border-collapse: collapse;
  width: 100%;
}
#dataTable th,
#dataTable td {
  padding: 8px;
  text-align: left;
}
#dataTable tr:nth-child(even) {
  background-color: #dddddd;
}

#dataTable tr:nth-child(odd) {
  background-color: #d1d1d1;
}

#dataTable th {
  text-transform: capitalize;
  background-color: #04aa6d;
  color: white;
  position: sticky;
  top: 0;
  z-index: 1;
}

.pagen {
  display: flex;
  justify-content: center;
}
.sortorder:after {
  content: "\25b2";
  cursor: pointer;
}
.sortorder.descending:after {
  content: "\25bc";
  cursor: pointer;
}

.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

.switch input { 
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}

input:checked + .slider {
  background-color: #4CAF50;
}

input:focus + .slider {
  box-shadow: 0 0 1px #4CAF50;
}

input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}

</css>
        <data_table>sp_instance_table</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>table,field_list</field_list>
        <has_preview>true</has_preview>
        <id>reusable_table</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Reusable Table</name>
        <option_schema>[{"displayValue":"Page","name":"redirect_url","section":"Behavior","default_value":"admin_home","label":"Redirect URL","type":"reference","value":"sp_page","ed":{"reference":"sp_page"}},{"name":"lable","section":"Behavior","label":"Lable","type":"string"}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function () {
	// Storing all the objects in this array
	data.arr = [];
	data.prdRecord = false;
	
	data.URL="hhii"
	if(input && input.action=="getID"){
		var pagesGr=new GlideRecord('sp_page')
		pagesGr.addQuery('sys_id',input.value);
		pagesGr.query();
		if(pagesGr.next()){
		//	gs.addErrorMessage(pagesGr.id)
			data.URL=pagesGr.id+"";
		}
		return;
		//return pagesGr.id //gs.addErrorMessage(data.URL)
	}
	
	data.table = $sp.getValue("table");
	//gs.addInfoMessage(data.table);
	data.field_list = $sp.getValue('field_list');
	data.fieldListArray = data.field_list.split(',');
	data.headerListArray = data.field_list.split('_').join(" ").split(",");
	if(data.table =="x_rptp_insureme_insurance_products"){
		data.prdRecord = true;
		data.fieldListArray = ["prod_name","insurer_name", "prod_desc"];
		data.headerListArray = ["Product Name", "Insurer Code", "Product Description"];
	}
	
	//Delete multiple
	if(input && input.action=="Delete"){
		//	data.action = '';
		//console.log(input.deleteIDs);
		var del = new GlideRecord(data.table);
		del.addEncodedQuery('sys_idIN'+input.deleteIDs);
		del.deleteMultiple();
	}

	// delete a record in the table
	function deleteRecord(recordId) {
		var grDelete = new GlideRecord(data.table);
		if (grDelete.get(recordId)) {
			grDelete.deleteRecord();
		}
	}

	function toggleRecord(recordId) {
		var grToggle = new GlideRecord(data.table);
		if (grToggle.get(recordId)) {
			grToggle.active = !grToggle.active;
			grToggle.update();
		}
	}

	if (input && input.currentTask) {
		deleteRecord(input.currentTask);
	}

	// toggle a record
	if (input && input.currentRec) {
		toggleRecord(input.currentRec);
	}


	var gr = new GlideRecord(data.table);
	gr.query();

	while (gr.next()) {
		var obj = {};

		data.fieldListArray.forEach(function (field) {
			obj[field] = gr.getDisplayValue(field);
		});

		/*
    for (var i = 0; i < data.list.length; i++) {
      obj[data.list[i]] = gr.getDisplayValue(data.list[i]);
    }
		*/
		obj.sys_id = gr.getValue("sys_id");
		obj.active = gr.getDisplayValue("active");
		obj.checked = false;
		
		
		data.arr.push(obj);
	}
	

})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-01-09 13:01:19</sys_created_on>
        <sys_id>f31cdff293ab3510acdc3f484dba10ca</sys_id>
        <sys_mod_count>188</sys_mod_count>
        <sys_name>Reusable Table</sys_name>
        <sys_package display_value="SmartAssurance" source="x_rptp_insureme">87b3cc0b4775711055784a02516d4350</sys_package>
        <sys_policy/>
        <sys_scope display_value="SmartAssurance">87b3cc0b4775711055784a02516d4350</sys_scope>
        <sys_update_name>sp_widget_f31cdff293ab3510acdc3f484dba10ca</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-03-11 07:37:59</sys_updated_on>
        <template><![CDATA[<div>
  <div class="headDiv">
    <div admin-back-button></div>
    <input  id="search_here" type="text" ng-model="searchQuery" ng-change="search()" placeholder="Search here" class="sIn" />
  </div>
  <br/>


  <div class="headDiv">
    <div class="headDivButtons">
       <div class="btn btn-primary" ng-click="redirection()">{{options.lable}}</div>
      <div ng-if="data.prdRecord">
		 	<div id="benefits" class="btn btn-primary" ng-click="addBenefits()" >Add Benefits</div>
    	<div id="features" class="btn btn-primary" ng-click="addFeatures()">View/Add Features</div>
      </div>
    </div>
    
    <div class="dropdown" >
        <label>Show: </label>
 				 <select id ="selecting_num_of_rec"
                 ng-model="maxInc"
                 ng-init="maxInc= '10'"
                 ng-change="updateMaxInc()">
           
    			<option  id ="selecting_num_1" value="10">10</option>
   			  <option id ="selecting_num_2" value="25">25</option>
   			  <option id="selecting_num_3" value="50">50</option>
          <option id="selecting_num_4" value="100">100</option>

          </select>
         <label>entries</label>
   </div>



    <!--
      <div class="dropdown">
      <label>Show: </label>
      <select
              ng-model="maxInc"
              ng-init="maxInc= '10'"
              ng-change="updateMaxInc()"
              >
        <option id ="10" value="10">10</option>
        <option id = "20" value="25">25</option>
        <option id="50" value="50">50</option>
        <option id="100" value="100">100</option>
      </select>
      <label>entries</label>
    </div>
      -->
  </div>
  <br />


  <div class="panel-heading" style="float: right;">
    <button id="delete_bin" type="button" class="btn btn-outline-white btn-rounded" style="background-color:#dddddd;" ng-click="deletSelected()">
      <i class="fa fa-trash" style ="color:red; font-size:1.5em;"></i>
    </button>
  </div>

  <!-- List Section -->

  <table id="dataTable">
    <!-- Table Heading Section -->
    <tr>
      <th scope="col">
        <input type='checkbox' id ="select_all" value='' ng-model='checkall' ng-change='checkAll()'>
      </th>
      <th
          ng-repeat="headerName in data.headerListArray"

          >
        {{headerName}}

      </th>
      <th>Active</th>
      <th>Delete</th>
    </tr>

    <!-- Table Body Section -->
    <tr ng-repeat="row in data.arr | limitTo: maxInc : currentIndex | filter: searchQuery">
      <td>
        <div class="custom-control custom-checkbox">
          <input type="checkbox" class="custom-control-input" id="{{'check_' + $index}}" ng-checked="checkall" ng-model="row.checked" data-sys-id="{{row.sys_id}}">
       
        </div>
      </td>
      <td ng-repeat="col in data.fieldListArray">{{row[col]}}</td>
      <td>
        <label class="switch">
        
          
          <input  type="checkbox" id="{{'checkbox-' + $index + '-1'}}" ng-checked="row.active === 'true'" ng-click="toggle(row.sys_id)" />
          
          
          <span class="slider round"></span>
       
          
        </label>
      </td>
      
     <td>
<button type="button" id="{{ 'button_id1' }}" ng-click="fun(row.sys_id,'Delete')" ng-attr-id="{{ 'delete_' + $index }}" class="btn btn-danger">
          Delete    
</button>
</td>
</tr>
  </table>




  <!-- Pagination -->

  <admin-pagination></admin-pagination>



</div>
]]></template>
    </sp_widget>
</record_update>
