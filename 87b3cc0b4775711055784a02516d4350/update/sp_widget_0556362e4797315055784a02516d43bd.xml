<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[// Assuming this code is in a file named api.controller.js

api.controller = function ($scope) {
    var c = this;
    
    // Function to remove HTML tags
    function removeHtmlTags(input) {
        var doc = new DOMParser().parseFromString(input, 'text/html');
        return doc.body.textContent || "";
    }

    // Get the current record's sys_id
    var recordSysId = $scope.data.sys_id; // Adjust this based on your data model

    // Use ServiceNow REST API to get the current record's data
    var glideRecord = new GlideRecord('x_rptp_insureme_insurance_products');
    glideRecord.addQuery('sys_id', recordSysId);
    glideRecord.query(function(response) {
        if (response && response.hasNext()) {
            var record = response.next();
            var fieldValue = record.getValue('prod_desc');
            var cleanedValue = removeHtmlTags(fieldValue);
            
            // Update the field in the current record with cleaned value
            glideRecord.setValue('prod_desc', cleanedValue);
            glideRecord.update();
        }
    });
};
]]></client_script>
        <controller_as>c</controller_as>
        <css>* { 
  font-family: 'Inter', sans-serif;
}

.main{
  // display: grid;
  // grid-template-columns: repeat(1, 1fr);
  display: flex;
  flex-wrap: wrap;
  gap: 30px;
  margin:auto;
  padding-bottom:50px;
  height: 100vh;
  // overflow-x: hidden; /* Hide horizontal scrollbar */
  overflow-y: scroll; 
  padding:50px;/* Add vertical scrollbar */
}
.main::-webkit-scrollbar {
    display: none;
}

.card {
  background:   #2c3e50 -&gt;  #58b8c7
  color:white;
  margin: auto;
  margin-top: 3rem;
  border-radius: 15px;
  
  //padding: 1rem;
  width: 320px;
  height: 300px; // tags are not at desired place
  //height:fit-content; card w offer is longer
  text-align: center;
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
  display: flex;
  flex-direction: column;

}

/*.editable_card{
background: white;
margin: auto;
margin-top: 3rem;
border-radius: 15px;
//padding: 1rem;
width: 350px;
height: 350px; // tags are not at desired place
//height:fit-content; card w offer is longer
text-align: center;
box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
display: flex;
flex-direction: column;
}
*/


.card .card-offer {
  position: relative;
  background-color: green;
  border-top-left-radius: 15px;
  border-top-right-radius: 15px;
  color: white;
}


.card-title {
  word-wrap: break-word;
  color:black;
  display: inline-block;
  font-weight: 800;
}

.img-container {
  position: relative;
  //left:35%;

  margin-left: auto;
  margin-right: auto;
  display: inline-block;
  width: 100px; 
  height: 100px; 
  padding:5px;
  margin-top:-10px;
}

.card-img {
  width: 100%;
  height: 100%;
  margin-bottom:5px;
}

/*
.desc {
  display: -webkit-box;
  //-webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  margin-bottom: 10px;
  text-align: justify;
  padding:10px;
}

/* Styles for the full description */

/* Show the full description on hover */
/*
.desc:hover .full-desc {
  display: block;
}
*/


.tooltip {
  position: relative;
  //display: inline-block;
  //border-bottom: 1px dotted black;
}

.tooltip .tooltiptext {
  visibility: hidden;
  width: 120px;
  background-color: black;
  color: #fff;
  text-align: center;
  border-radius: 6px;
  padding: 5px 0;

  /* Position the tooltip */
  position: absolute;
  z-index: 1;
}

.tooltip:hover .tooltiptext {
  visibility: visible;
}
.card-footer {
  margin-top: auto;
  margin-bottom: 15px;/* Pushes the buttons to the bottom */
}

.card-footer .btn:hover {
  background: #006994; 
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.3); 	
}

/* width */
::-webkit-scrollbar {
  width: 10px;
}

/* Track */
::-webkit-scrollbar-track {
  background: #f1f1f1; 
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: #888; 
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: #555; 
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>product_card</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Product Card</name>
        <option_schema>[{"name":"title","section":"other","label":"Title","type":"string"},{"name":"image","section":"other","label":"Image","type":"string"},{"name":"description","section":"other","label":"Description","type":"string"},{"name":"offer","section":"other","label":"Offer","type":"string"}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
    /* populate the 'data' object */
    /* e.g., data.table = $sp.getValue('table'); */

    function fetchData() {
        data.arr = [];
        data.list = "prod_name,prod_desc,prod_image,product_offer".split(",");
    }

    // Function to remove HTML tags
    function removeHtmlTags(input) {
        // Check if DOMParser is supported
        if (typeof DOMParser !== 'undefined') {
            var doc = new DOMParser().parseFromString(input, 'text/html');
            return doc.body.textContent || "";
        } else {
            // Fallback solution if DOMParser is not supported
            return input.replace(/(<([^>]+)>)/ig, '');
        }
    }

    // Define a function to fetch and process records
    function fetchRecords() {
        var gr = new GlideRecord('x_rptp_insureme_insurance_products');
        gr.addQuery('active', true);
        gr.query();

        while (gr.next()) {
            var obj = {};
            for (var i = 0; i < data.list.length; i++) {
                var fieldName = data.list[i];
                if (fieldName === 'prod_desc') {
                    obj[fieldName] = removeHtmlTags(gr.getValue(fieldName));
                } else {
                    obj[fieldName] = gr.getDisplayValue(fieldName);
                }
            }
            obj.sys_id = gr.getValue("sys_id");
            data.arr.push(obj);
        }
    }

    fetchData();
    fetchRecords();
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-12-27 05:22:00</sys_created_on>
        <sys_id>0556362e4797315055784a02516d43bd</sys_id>
        <sys_mod_count>972</sys_mod_count>
        <sys_name>Product Card</sys_name>
        <sys_package display_value="SmartAssurance" source="x_rptp_insureme">87b3cc0b4775711055784a02516d4350</sys_package>
        <sys_policy/>
        <sys_scope display_value="SmartAssurance">87b3cc0b4775711055784a02516d4350</sys_scope>
        <sys_update_name>sp_widget_0556362e4797315055784a02516d43bd</sys_update_name>
        <sys_updated_by>harshitha</sys_updated_by>
        <sys_updated_on>2024-01-19 05:54:27</sys_updated_on>
        <template><![CDATA[<div>

  <div class="main">
    <div ng-repeat="field in data.arr">
      <div class="card text-center">
        <div class="card-offer" ng-if="field.product_offer !== ''">{{field.product_offer}}% OFF</div>
        <h4 class="">{{field.prod_name}}</h4>

        <div class="img-container">
          <img class="card-img" src="https://www.pngplay.com/wp-content/uploads/8/Travel-Insurance-PNG-Free-File-Download.png" alt="Card image cap">
          <!-- Tooltip -->
        </div>
     
        <div class="tooltip">Hover me!
          <div class="tooltiptext">
            {{field.prod_desc }}
          </div>   
        </div>
        
       <div class="card-footer">
          <button type="button" class="btn btn-primary">View Plans</button>
          
        </div>
      </div>
    </div>
   
<!--    <widget id="demo_prod">
  </widget> -->

  </div>
</div>
]]></template>
    </sp_widget>
</record_update>
