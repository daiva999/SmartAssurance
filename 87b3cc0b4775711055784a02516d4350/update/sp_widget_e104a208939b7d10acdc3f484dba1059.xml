<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function ($scope,$timeout,spUtil) {
  var c = this;

  c.submit = function () {
    c.data.temp1 = c.cc;
    c.data.temp2 = c.cn;
    c.data.temp3 = c.sdes;
    c.data.temp4 = c.pimg;
		
		
    if (!c.data.temp1.trim() || !c.data.temp2.trim()) {
      return;
    } else {
      c.server.update().then(function (response) {
          if (response.errorMessage) {
            c.errorMessage = response.errorMessage;
						spUtil.addTrivialMessage(errorMessage);
						
						 c.errorMessage = null;

            c.successMessage = null;
          } else {
            c.successMessage = response.successMessage;
						spUtil.addTrivialMessage(response.successMessage);
						
						
            c.errorMessage = null;

            $timeout(function () {
							location.href = "/ap?id=" + c.options.redirect_url;
            }, 6000);
          }
        })
        .catch(function (error) {
				
    	  console.error("Error:", error);
        c.errorMessage = error.data || "An error occurred.";                
				c.errorMessage = null;        
        c.successMessage = null;
        });
    }
  };
};
]]></client_script>
        <controller_as>c</controller_as>
        <css>.goBack {
    position: relative;
    width: 100px;
    height: 40px;
}

.goBack i {
    display: inline-block;
    transition: opacity 0.3s ease-out;
}

.goBack::before {
    content: 'Go back';
    display: none;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.goBack:hover i {
    opacity: 0;
}

.goBack:hover::before {
    display: inline-block;
}

input[type=text],
select {
    width: 100%;
    padding: 12px 20px;
    margin: 8px 0;
    display: inline-block;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
}

input[type=url],
select {
    width: 100%;
    padding: 12px 20px;
    margin: 8px 0;
    display: inline-block;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
}

input[type=submit] {
    width: 100%;
    background-color: #4CAF50;
    color: white;
    padding: 14px 20px;
    margin: 8px 0;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

input[type=submit]:hover {
    background-color: #45a049;
}

.css-form input.ng-invalid.ng-touched {
  border: 1px solid #FA787E;
  padding: 5px;
}

.css-form input.ng-valid.ng-touched {
  border: 1px solid #78FA89;
  padding: 5px;
}


div {
    border-radius: 5px;
    background-color: #f2f2f2;
    padding: 20px;
}

.head {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.required {
    color: red;
}</css>
        <data_table>sp_instance_table</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>table,filter,field_list</field_list>
        <has_preview>true</has_preview>
        <id>new_category</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>Create New Category</name>
        <option_schema>[{"displayValue":"Page","hint":"Redirect url after submit","name":"redirect_url","section":"Presentation","default_value":"category","label":"Url","type":"reference","value":"sp_page","ed":{"reference":"sp_page"}}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function () {
  try {
    // Retrieve table name
    data.table = $sp.getValue("table");

    // Initialize GlideRecord
    var gr = new GlideRecord(data.table);

    // Check for required input variables
    if (!input.temp1 || !input.temp2 || !input.temp3) {
      gs.error("Input variables are not defined.");
      return "Error: Input variables are not defined.";
    }

    // Query for existing records with category_code
    gr.addQuery("category_code", input.temp1);
    gr.query();

    if (gr.hasNext()) {
      var errorMessage = "Category code already exists.";
      gs.addErrorMessage(errorMessage);
      data.errorMessage = errorMessage;
      current.setAbortAction(true);
      return errorMessage;
    }

    // Initialize GlideRecord for the next query
    gr.initialize();
    
    // Query for existing records with category_name
    gr.addQuery("category_name", input.temp2);
    gr.query();

    if (gr.hasNext()) {
      var errorMessage = "Category name already exists.";
      // gs.addErrorMessage(errorMessage);
      data.errorMessage = errorMessage;
      current.setAbortAction(true);
      return errorMessage;
    }

    // Initialize GlideRecord for the final insert
    gr.initialize();
    
    // Set field values
    gr.setValue("category_code", input.temp1);
    gr.setValue("category_name", input.temp2);
    gr.setValue("short_description", input.temp3);
    gr.setValue("isactive", true);

    // Log the query parameters and values
    gs.info("Inserting record with category_code: " + input.temp1 + ", category_name: " + input.temp2 + ", short_description: " + input.temp3);

    // Insert the record
    if (!gr.insert()) {
      var errorMessage = "Error inserting record: " + gr.getErrorMessage();
      gs.error(errorMessage);
      data.errorMessage = errorMessage;
      current.setAbortAction(true);
      return errorMessage;
    }

    var successMessage = "Record inserted successfully.";
    //gs.addInfoMessage(successMessage);
    data.successMessage = successMessage;
    return successMessage;
  } catch (e) {
    gs.error("An error occurred: " + e);
    return "Error: " + e;
  }
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-12-19 09:37:47</sys_created_on>
        <sys_id>e104a208939b7d10acdc3f484dba1059</sys_id>
        <sys_mod_count>214</sys_mod_count>
        <sys_name>Create New Category</sys_name>
        <sys_package display_value="SmartAssurance old" source="x_rptp_insureme">87b3cc0b4775711055784a02516d4350</sys_package>
        <sys_policy/>
        <sys_scope display_value="SmartAssurance old">87b3cc0b4775711055784a02516d4350</sys_scope>
        <sys_update_name>sp_widget_e104a208939b7d10acdc3f484dba1059</sys_update_name>
        <sys_updated_by>chandan.parmar</sys_updated_by>
        <sys_updated_on>2024-02-20 11:32:42</sys_updated_on>
        <template><![CDATA[<div>
  <div admin-back-button></div>
  <div class="head">
    <h2>Please fill the New Category details here:</h2>
    <img
      ng-src="https://th.bing.com/th/id/OIP.junOskwqnQ1eV83Icp8uKwHaHa?w=198&h=198&c=7&r=0&o=5&dpr=1.3&pid=1.7"
      style="width: 300px"
    />
  </div>
  <br />
  <form  novalidate class="css-form">
    <b>Category Code: <span class="required">*</span></b>
    <input id="category_code" type="text" name="cat_code" ng-model="c.cc" required ng-pattern="/^[0-9]+$/"/>
    <br />
    <b>Category Name: <span class="required">*</span></b>
    <input id = "category_name" type="text" name="cat_name" ng-model="c.cn" required ng-pattern="/^[a-zA-Z]+$/"/>
         <span style="color: {{errorInValue ? 'red' : 'transparent'}};" >{{errorInValue}}</span>
    <br />
    <b>Short Description:</b>
    <input id = "short_description" type="text" name="sh_desc" ng-model="c.sdes" />
    <br />
    <b>Category Image:</b>
    <input id = "image_id" type="file" name="prod_img" ng-model="c.pimg" accept="image/*" />
    <br />
    <div class="hidden">
      <b>Is Active:</b>
      <input type="checkbox" name="isa" ng-model="c.ia" />
    </div>
    <br />
    <br />
    <input id ="submit_button" type="submit" value="Submit" ng-click="c.submit()" />
  </form>
</div>
]]></template>
    </sp_widget>
</record_update>
