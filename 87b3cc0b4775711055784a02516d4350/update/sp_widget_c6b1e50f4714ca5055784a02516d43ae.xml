<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function($scope, $uibModal) {
    var c = this;

    c.openModal = function() {
        // Open the modal using the $uibModal service
        c.modalInstance = $uibModal.open({
            templateUrl: 'modalTemplate',  // Template for the modal content
            scope: $scope  // Use the same scope as the controller
        });
    }; 

c.submitAnswers = function() {
    var responses = []; 

    var allQuestionsAnswered = true;

    // Loop through each question and collect the user's response

	$scope.data.sample.forEach(function(question, index) {
        var response = {
            question: question.questionText,  // Question
            answer: question.answer,  // User's response to the question
            index: index  // Index of question
        };
		
		 
       // if (!question.answer) {
				//if (question.answer=="false") {
		if (question.answer === undefined || question.answer === "false") {
            allQuestionsAnswered = false; // Set the flag to false if any question is not answered
        }
		
		

		
	
        // Push the response object to the responses array
        responses.push(response);
    });

    if (!allQuestionsAnswered) {
        alert("Please fill in all fields before submitting.");
        return; // Exit the function if not all fields are filled
    }

    // If all fields are filled, proceed with submitting the answers
    alert(JSON.stringify(responses));

    // Send the data to the server via an HTTP GET request
    c.server.get({"method": "submitAnswers", "responses": responses}).then(function(response) {
        alert('Thank You');
    }).catch(function(error) {
        console.error('Error submitting answers:', error);
    });
}

		
};
]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>questions</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Questions</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[/*(function() {
    /* populate the 'data' object */
    /* e.g., data.table = $sp.getValue('table'); */
/*
    data.sample = [];
    var recordProducerSysId = '9826123193548250acdc3f484dba1075';

    var gr = new GlideRecord('item_option_new');
    gr.addQuery('cat_item', recordProducerSysId);
    gr.query();

    while (gr.next()) {
        var name = gr.getValue('name');
        var questionText = gr.getValue('question_text');
        var type = gr.getValue('type');

        // Create an object to hold the values and add it to the sample array
        var item = {
            name: name,
            questionText: questionText,
            type: type
        };
        data.sample.push(item);
    }

    // Assuming you have fetched questions from the database and stored them in a variable called 'questions'
  
})();

*/

(function() {
    /* populate the 'data' object */
    /* e.g., data.table = $sp.getValue('table'); */

    data.sample = [];
    var recordProducerSysId = '9826123193548250acdc3f484dba1075';

    var gr = new GlideRecord('item_option_new');
    gr.addQuery('cat_item', recordProducerSysId);
    gr.query();

    while (gr.next()) {
        var name = gr.getValue('name');
        var questionText = gr.getValue('question_text');
        var type = gr.getValue('type');

        // Create an object to hold the values and add it to the sample array
        var item = {
            name: name,
            questionText: questionText,
            type: type
        };
        data.sample.push(item);
    }
						 var fields = [];
		        var gr2 = new GlideRecord('sys_dictionary');
        gr2.addQuery('name',"x_rptp_insureme_insurance_questionnaire" );
        gr2.query();

        while (gr2.next()) {
            var fieldName = gr2.getValue('element');
            if(fieldName!=' '){
							fields.push(fieldName);
        }}
	
	//gs.addErrorMessage(JSON.stringify(fields));
	
	

    // Assuming you have fetched questions from the database and stored them in a variable called 'questions'

    if (input && input.method == "submitAnswers") {
        // Checks if there is input data and if the method is "questionAsked".

        var details = input.responses;
				gs.addInfoMessage(details);
        // Retrieves the answer data from the input.

        var tableName = 'x_rptp_insureme_insurance_questionnaire';
       


			
			gs.addInfoMessage(JSON.stringify(fields))

        var gr3 = new GlideRecord(tableName);
        gr3.initialize();
        // GlideRecord object fwill be creating new records.

        details.forEach(function(detail) {
            // Iterates over each detail in the answer data.

            var index = detail.index;
            // Retrieves the index of the detail.

            var field = "field"+(index+1);
					gs.addInfoMessage(field);
            // Retrieves the field name corresponding to the index from the fields array.

            var ans = detail.answer;
           // Retrieves the answer from the detail.

            var userAns = false;
            // Initializes a variable to store the processed answer
            if (ans == "yes") {
                // Checks if the answer is "Yes".
                userAns = true;
                // Sets eAns to true if the answer is "Yes".
            }
						

            gr3[field] = ans;
            // Sets the field value in the GlideRecord object based on the processed answer.
        });

        gr3.insert();
        // Inserts the new record into the table.
    }

    // Optionally, you can return the sys_id of the newly created record
    // data.sys_id = newRecordSysId;
})();

]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>harshitha</sys_created_by>
        <sys_created_on>2024-02-16 05:32:06</sys_created_on>
        <sys_id>c6b1e50f4714ca5055784a02516d43ae</sys_id>
        <sys_mod_count>189</sys_mod_count>
        <sys_name>Questions</sys_name>
        <sys_package display_value="SmartAssurance" source="x_rptp_insureme">87b3cc0b4775711055784a02516d4350</sys_package>
        <sys_policy/>
        <sys_scope display_value="SmartAssurance">87b3cc0b4775711055784a02516d4350</sys_scope>
        <sys_update_name>sp_widget_c6b1e50f4714ca5055784a02516d43ae</sys_update_name>
        <sys_updated_by>harshitha</sys_updated_by>
        <sys_updated_on>2024-02-23 10:22:06</sys_updated_on>
        <template><![CDATA[<div>
<!-- your widget template -->
<!-- {{data.sample}} 
  {{data.responses}}
  
  
<!--<div id="question-container">
    <div ng-repeat="question in data.sample">
        <label>{{ question.questionText }}</label>
        <br>
        <input type="radio" ng-model="question.answer" value="true"> Yes
        <input type="radio" ng-model="question.answer" value="false"> No
        <br>
    </div>
</div> -->
  
  <div class="panel-body">
    <div class="form-group">
      <!--   <button class="btn btn-primary btn-block" ng-click="c.openModal()">Answer Questions</button> -->
      <button class="btn btn-primary" ng-click="c.openModal()">
Answer these questions
        <!-- Image 1 -->
       <!-- <img src="https://karanji.com/wp-content/uploads/2021/08/Basics_of_Insurancel2-min.jpg" alt="Image 1" ng-click="c.openModal()">-->
      </button>
    </div>
  </div>

<script type="text/ng-template" id="modalTemplate">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">Take a moment to answer these questions.</h4>
        </div>
        <div class="panel-body">
            <div id="question-container">
                <div ng-repeat="question in data.sample">
                    <label>{{ question.questionText }}</label>
                    <br>
                    <label ng-if="question.type === '1'">
                        <input type="radio" ng-model="question.answer" ng-value="true"> Yes
                    </label>
                    <label ng-if="question.type === '1'">
                        <input type="radio" ng-model="question.answer" ng-value="false"> No
                    </label>
                    <label ng-if="question.type === '10'">
                        <input type="date" ng-model="question.answer">
                    </label>

                    <br>
                </div>
            </div>
        </div>
        <div class="panel-footer">
            <button ng-click="c.submitAnswers()" class="btn btn-primary">Check Plans</button>
        </div>
    </div>
</script>

    </div>




]]></template>
    </sp_widget>
</record_update>
